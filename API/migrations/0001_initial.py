# Generated by Django 4.1 on 2024-05-15 15:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='TSN',
            fields=[
                ('tsn_id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('gamedate_time', models.CharField(max_length=50)),
                ('playedpoints', models.IntegerField()),
                ('slipdatetime', models.CharField(max_length=50)),
                ('winning', models.CharField(default='live', max_length=10)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tsn', to='API.transaction')),
            ],
            options={
                'ordering': ['gamedate_time'],
            },
        ),
        migrations.CreateModel(
            name='Win_Percent',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('percent', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default=None, max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')])),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('otp', models.CharField(blank=True, max_length=6)),
                ('otp_resend_count', models.IntegerField(default=0)),
                ('last_otp_send_time', models.CharField(blank=True, max_length=50)),
                ('balance', models.IntegerField(default=0)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('holder_name', models.CharField(blank=True, max_length=50)),
                ('ifsc_code', models.CharField(blank=True, max_length=50)),
                ('upi_id', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_users', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('Q', 'Q'), ('R', 'R'), ('S', 'S'), ('T', 'T')], max_length=1)),
                ('number', models.CharField(max_length=2)),
                ('Playedpoints', models.IntegerField()),
                ('tsn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_games', to='API.tsn')),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='cuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TimeEntryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.CharField(max_length=10)),
                ('A', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('B', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('C', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('D', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('E', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('F', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('G', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('H', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('I', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('J', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('K', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('L', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('M', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('N', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('O', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('P', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('Q', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('R', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('S', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('T', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='API.datemodel')),
            ],
        ),
    ]
